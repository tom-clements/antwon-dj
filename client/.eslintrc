{
    "root": true,
    "parser": "@typescript-eslint/parser",
    "env": {
        "browser": true,
        "es2021": true
    },
    "parserOptions": {
        "sourceType": "module",
        "ecmaFeatures": {
            "jsx": true
        }
    },
    "extends": [
        "eslint:recommended",
        "plugin:@typescript-eslint/eslint-recommended",
        "plugin:@typescript-eslint/recommended",
        "plugin:react/recommended",
        "plugin:react-hooks/recommended",
        "next/core-web-vitals"
    ],
    "settings": {
        "react": {
            "version": "detect"
        }
    },
    "rules": {
        "indent": ["warn", 4],
        "linebreak-style": ["warn", "unix"],
        "quotes": ["warn", "single"],
        "semi": ["warn", "always"],
        "import/no-anonymous-default-export": "off", // Stories like default exports
        "react/react-in-jsx-scope": "off", // Next.js doesn't require React to be in scope for every Component
        "no-restricted-imports": ["error", { "patterns": ["*./*", "*../*"] }], // No relative imports
        "@typescript-eslint/explicit-function-return-type": "off", // Stict type inferrence is perfectly fine :)
        "@typescript-eslint/no-explicit-any": "off", // Sometimes, it is unfortunately necessary :(
        "react/prop-types": "off", // Strict typing is again, just fine
        "@typescript-eslint/no-empty-interface": ["error", { "allowSingleExtends": true }], // Extending is fine and has purpose in module augmentation
        "@typescript-eslint/explicit-module-boundary-types": "off", // Would be nice, but difficult to achieve with Next.js/Redux toolkit
        "@typescript-eslint/no-non-null-assertion": "off" // Useful in tests and sometimes I think I know better
    }
}
